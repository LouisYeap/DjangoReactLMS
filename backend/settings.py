"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0s%$j30-d#oss9a$kqr0s&%3(600t%c^3b-pseo-@8@+s5bx=v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Custom Apps
    'core',
    'userauths',
    'api',

    # Third-party Apps
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    ## Enable CORS (Cross-Origin Requests) e.g., from React frontend
    'corsheaders',
    ]   

    # django-cors-headers middleware, which handles Cross-Origin Resource Sharing (CORS) for your Django application.
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

STATIC_ROOT = BASE_DIR / 'templates'

MEDIA_URL = '/media/' 
# 127.0.0.1/media/avatar.png

MEDIA_ROOT = BASE_DIR / 'media'

# 用于userauths中的Prifiles模型关联 避免循环引用
AUTH_USER_MODEL= 'userauths.User'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Library LMS",
    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Library LMS",
    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "Desphixs LMS",
    # Logo to use for your site, must be present in static files, used for brand on top left
    # "site_logo": "books/img/logo.png",
    # Welcome text on the login screen
    "welcome_sign": "Welcome to the library LMS",
        # Copyright on the footer
    "copyright": "Acme Library Ltd",
        # Whether to show the UI customizer on the sidebar
    "show_ui_builder": True,
}


JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": True,
    "brand_small_text": False,
    "brand_colour": "navbar-indigo",
    "accent": "accent-danger",
    "navbar": "navbar-indigo navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-indigo",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    }
}


# Configuration for the 'djangorestframework-simplejwt' package
SIMPLE_JWT = {
    # Access token will be valid for 15 minutes from issue time
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    
    # Refresh token will be valid for 50 days from issue time
    'REFRESH_TOKEN_LIFETIME': timedelta(days=50),
    
    # When a refresh token is used to obtain a new access token, a new refresh token is also issued
    'ROTATE_REFRESH_TOKENS': True,
    
    # Expired refresh tokens are blacklisted after being rotated
    'BLACKLIST_AFTER_ROTATION': True,
    
    # Do not update the user's last_login field when authenticating via JWT
    'UPDATE_LAST_LOGIN': False,

    # Algorithm used to sign the token (HMAC using SHA-256)
    'ALGORITHM': 'HS256',

    # No public key verification needed since symmetric encryption is used
    'VERIFYING_KEY': None,
    
    # Optional: intended audience for the token (not set here)
    'AUDIENCE': None,
    
    # Optional: entity that issued the token (not set here)
    'ISSUER': None,
    
    # Optional: URL where JSON Web Key (JWK) can be found (not set here)
    'JWK_URL': None,
    
    # Tolerance time in seconds to account for clock skew between systems
    'LEEWAY': 0,

    # Expected type of Authorization header (Bearer tokens)
    'AUTH_HEADER_TYPES': ('Bearer',),
    
    # Name of the HTTP header used to carry the token
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    
    # Field name on the User model which serves as the user identifier
    'USER_ID_FIELD': 'id',
    
    # Claim name in the token that contains the user identifier
    'USER_ID_CLAIM': 'user_id',
    
    # Rule function to determine if a user should be authenticated based on the token
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    # Type of token class used for authentication
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    
    # Claim name indicating the type of token (e.g., "access" or "refresh")
    'TOKEN_TYPE_CLAIM': 'token_type',
    
    # Class used to represent users derived from tokens
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    # Claim name for the unique identifier of the token (JWT ID)
    'JTI_CLAIM': 'jti',

    # Claim name indicating the extended expiration time for sliding tokens
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    
    # Sliding tokens expire after 5 minutes unless refreshed
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    
    # Maximum lifetime for sliding token refresh window (1 day)
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

CORS_ALLOW_ALL_ORIGINS = True